@model Model.EF.Product
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section header{Cập nhật/Sửa thông tin}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="card shadow mb-4">
                            <div class="card-header py-3">
                                <h6 class="m-0 font-weight-bold text-primary">Thông tin sản phẩm</h6>
                            </div>
                            <div class="card-body">
                                @using (Html.BeginForm("Edit", "Products", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="form-horizontal">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.ID)
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.TextBoxFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.LabelFor(model => model.Metatitle, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.TextBoxFor(model => model.Metatitle, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Metatitle, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.TextBoxFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.TextBoxFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.TextBoxFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.TextBoxFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.TextBoxFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.TextBoxFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.LabelFor(model => model.Warranty, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.TextBoxFor(model => model.Warranty, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Warranty, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                <div class="checkbox">
                                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    @Html.CheckBoxFor(model => model.Status)
                                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="Save" class="btn btn-default" />
                                            </div>
                                        </div>
                                    </div>

                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>